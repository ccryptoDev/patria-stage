<style type="text/css">
    #pastDuePayments_table {
        margin-top: 10px;
    }
</style>
<div class="past-due-data-table-container" style="margin-top: 20px;">
    <h4>Past Due Payments</h4>
    {% if paymentmanagementdata.totalNumberOfPastDue > 0 %}<span class="userData-lastname" style="font-weight: bold"></span><span class="collections-tab-isInBankruptcy" ><span style="font-weight: bold;color:#f39c12;"><i class='fa fa-exclamation-triangle' aria-hidden='true' style="margin-right: 5px;" ></i>
            Warning! All payments are applied to the OLDEST past due payment (not the current payment).
        </span></span><br/><br>{% endif %}
    <table class="table table-striped table-bordered dataTable" id="pastDuePayments_table"  width="100%">
        <thead>
        <tr>
            <th style="width: 10px">#</th>
            <th>Schedule Date</th>
            <th>DPD</th>
            <th>Payment Amount</th>
            <th>Paid Amount</th>
            <th>Remaining Balance</th>
        </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<div class="paymentPastDueActionColumn" style="display: none;">
    <div class="paymentPastDueAction-checkbox">
        <input type="checkbox" class="bigger-checkbox paymentPastDueAction"  name="paymentPastDueActionCheckbox_" id="chkPaymentPastDueActionCheckbox_" />
        <input type="hidden" class="paymentScheduleIndex" value="" />
        <input type="hidden" class="collectionPaymentId" value="" />
    </div>
</div>
<script>
    $(document).ready(function () {
        const columnDataType = {
            "loopId": "ignore",
            "date": "datetime",
            "amount": "currency",
            "appliedPastDueAmount": "currency",
            "paymentRemainingBalance": "currency",
            "numberOfDaysPastDue": "int"
        };
        const tableElement = $("#pastDuePayments_table");
        const uTable = tableElement.DataTable({
            initComplete: function (settings, json) {},
            searching: false,
            processing: true,
            serverSide: true,
            destroy: true,
            language: {
                loadingRecords: "Please wait - loading..."
            },
            paging: true,
            pagingType: "full_numbers",
            ajax: {
                url: "/admin/ajaxGetPassDuePayments/{{ paymentmanagementdata.id }}",
                data: function (d) {
                    _.forEach(d.columns, (col) => {
                        const columnType = columnDataType[col.data];
                        col["dataType"] = columnType;
                    })
                }
            },
            order: [
                [1, 'asc']
            ],
            lengthMenu: [
                [
                    10, 25, 50, 100
                ],
                [
                    10, 25, 50, 100
                ]
            ],
            pageLength: 10,
            columns: [
                {
                    data: "loopId",
                    orderable: false,
                    searchable: false
                }, {
                    data: "date",
                    render: function (data, type, row, meta) {
                        if (data) {
                            return moment(data).format("MM-DD-YYYY")
                        }
                        return "--";
                    }
                }, {
                    data: "numberOfDaysPastDue"
                }, {
                    data: "amount",
                    render: function (data, type, row, meta) {
                        if (data) {
                            return parseFloat(data.toString()).toLocaleString("en-US", {
                                style: "currency",
                                currency: "USD",
                                minimumFractionDigits: 2,
                                maximumFractionDigits: 2
                            });
                        }
                        return "--";
                    }
                }, {
                    data: "appliedPastDueAmount",
                    render: renderDataTableCurrency
                }, {
                    data: "paymentRemainingBalance",
                    render: renderDataTableCurrency
                }
            ]
        });

        $('#collectionCommentList_table_filter input')
        .off("keyup keypress input")
        .on('keyup', function (e) {
            if (this.value.length > 3 === 0) {
                uTable
                .search(this.value)
                .draw();
            }
        });

        tableElement
        .parent()
        .addClass('table-responsive');

    });
    function renderDataTableCurrency(data, type, row, meta) {
        if (data) {
            return parseFloat(data.toString()).toLocaleString("en-US", {
                style: "currency",
                currency: "USD",
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        }
        return "$0.00";
    }
</script>
